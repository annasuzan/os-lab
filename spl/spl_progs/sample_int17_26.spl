print("int17");

alias processTable R5;
processTable = PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16;

alias userSP R6;
userSP = SP;

[processTable + 13] = SP;
SP = [processTable + 11] * 512 - 1;

alias returnVal R7;
returnVal = [PTBR + 2 * ((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512);

alias userName R12;
userName = [[PTBR + 2 * ((userSP - 4) / 512)] * 512 + ((userSP - 4) % 512)];

alias password R13;
password = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + ((userSP - 3) % 512)];

[processTable + 9] = 27;

print("h1");
if([processTable + 1] != 1) then
	[returnVal] = -2;
	[processTable + 9] = 0;
	SP = [processTable + 13];
	ireturn;
endif;

alias i R10;
alias userID R11;
userID = -1;
i = 0;
while(i<16) do
	print([USER_TABLE + 2 * i]);
	if([USER_TABLE + 2 * i] == userName) then
		userID = i;
		break;
	endif;
	i = i + 1;
endwhile;

print("h2");
if(userID == -1) then
	[returnVal] = -1;
	[processTable + 9] = 0;
	SP = [processTable + 13];
	ireturn;
endif;

print("h3");
encrypt password;

if(password != [USER_TABLE + 2 * userID + 1]) then
	[returnVal] = -1;
	[processTable + 9] = 0;
	SP = [processTable + 13];
	ireturn;
endif;

[PROCESS_TABLE + 2 * 16 + 4] = CREATED;
[PROCESS_TABLE + 2 * 16 + 3] = userID;
print(userID);

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] = WAIT_PROCESS;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 5] = 2;

[SYSTEM_STATUS_TABLE + 0] = userID;	//CURRENT_USER_ID

print("h4");
multipush(R5,R7);
call MOD_5;
multipop(R5,R7);

print("h5");
[returnVal] = 0;
[processTable + 9] = 0;
SP = [processTable + 13];
ireturn;
