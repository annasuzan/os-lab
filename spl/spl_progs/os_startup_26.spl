// Loading the boot module to memory
loadi(54,67);
loadi(55,68);

// Loading idle to memory
loadi(69,11);
//loadi(70,12);

//Loading Library code from disk to memory 
loadi(63,13);
loadi(64,14);

SP = 76 * 512 - 1;
call BOOT_MODULE;

//setting page table entries for idle process

PTBR = PAGE_TABLE_BASE;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0010";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8]  = 69;
[PTBR+9]  = "0100";
[PTBR+10] = -1;	//70
[PTBR+11] = "0000";	//0100
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 70;	//81
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";


//Setting Process Table for idle
[PROCESS_TABLE + 1] = 0; 
[PROCESS_TABLE + 4] = RUNNING;
[PROCESS_TABLE + 11] = 76; 	//82
[PROCESS_TABLE + 12] = 0;
[PROCESS_TABLE + 13] = 8 * 512;
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
[PROCESS_TABLE + 15] = 10;

[70 * 512] = [69 * 512 + 1];
[SYSTEM_STATUS_TABLE + 1] = 0; 
SP = 8 * 512;
ireturn;


