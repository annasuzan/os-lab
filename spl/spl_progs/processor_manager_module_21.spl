//print "pro";

alias functionNo R1;
alias currPID R2;
alias userAreaPage R5;

//GET_PCB_ENTRY
if(functionNo == 1) then
	alias i R10;
	i = 0;
	while(i<MAX_PROC_NUM) do
		if([PROCESS_TABLE + i * 16 + 4] == TERMINATED) then
			R0 = i;
			[PROCESS_TABLE + i * 16 + 1] = i;
			[PROCESS_TABLE + i * 16 + 4] = ALLOCATED;
			[PROCESS_TABLE + i * 16 + 14] = PAGE_TABLE_BASE + i * 20;
			[PROCESS_TABLE + i * 16 + 15] = 10;
			return;
		endif;
		i = i + 1;
	endwhile;
	R0 = -1;
	return;
endif;

//FREE_USER_AREA_PAGE
if(functionNo == 2) then 
	//print "freeuser";
	  
	userAreaPage = [PROCESS_TABLE + currPID * 16 + 11];
	
	multipush(R1,R2,R5);

	functionNo = 2;     //RELEASE_PAGE
	R2 = userAreaPage; //pageNo
	call MOD_2;
	
	multipop(R1,R2,R5);

endif;

//EXIT_PROCESS
if(functionNo == 3) then 
	//print("exitprocess"); 
	if([PROCESS_TABLE + currPID * 16 + 9] != 9) then
		alias i R10;
		i = 0;
		while(i<MAX_PROC_NUM) do
			if([PROCESS_TABLE + i * 16 + 4] == WAIT_PROCESS) then
				if([PROCESS_TABLE + i * 16 + 5] == currPID) then
					[PROCESS_TABLE + i * 16 + 4] = READY;
				endif;
			endif;
			if([PROCESS_TABLE + i * 16 + 2] == currPID) then
				[PROCESS_TABLE + i * 16 + 2] = -1;
			endif;
			i = i + 1;
		endwhile;
	endif;
	
	userAreaPage = [PROCESS_TABLE + currPID * 16 + 11];

	multipush(R1,R2,R5);

	functionNo = 4;     //FREE_PAGE_TABLE
	R2 = currPID;
	call MOD_1;

	multipop(R1,R2,R5);

	multipush(R1,R2,R5);
	
	functionNo = 2;    //FREE_USER_AREA_PAGE
	R2 = currPID;
	call MOD_1;

	multipop(R1,R2,R5);

	[PROCESS_TABLE + currPID * 16 + 4] = TERMINATED;
endif;

//FREE_PAGE_TABLE
if(functionNo == 4) then 
	//alias pageNo R2; 
	PTBR = PAGE_TABLE_BASE + currPID * 20;
	//print("freePT");
	//invalidating library pages
	[PTBR+0] = -1;
	[PTBR+1] = "0000";
	[PTBR+2] = -1;
	[PTBR+3] = "0000";

	alias i R10;
	i = 4;
	//print("releasing pages");
	while(i<20) do
		if([PTBR + i] != -1) then
			
			//releasing valid entries
			multipush(R1,R2,R5,R10);

			functionNo = 2;     //RELEASE_PAGE
			R2 = [PTBR + i];   //pageNo
			call MOD_2;

			multipop(R1,R2,R5,R10);
			
			//invalidating those entries
			[PTBR + i] = -1;
			[PTBR + i + 1] = "0000";
			
		endif;
		i = i + 2;
	endwhile;
	
	i=0;
	while(i<10) do 
		if([DISK_MAP_TABLE + currPID * 10 + i] != -1) then
			if(i==2 || i==3 || i==8 || i==9) then
				multipush(R1,R2,R5,R6,R10);
				R1 = 4;		//RELEASE_BLOCK
				R2 = [DISK_MAP_TABLE + currPID * 10 + i];
				//R3 = currPID;
				call MOD_2;
				multipop(R1,R2,R5,R6,R10);
			endif;
			[DISK_MAP_TABLE + currPID * 10 + i] = -1;
		endif;
		i = i + 1;
	endwhile;
	
	
endif;


//print("exitpr");
return;		

	
