breakpoint;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = -1;  // SET MODE = -1
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 11]*512 - 1;
backup;
multipush(EIP);

if (EC != 0)
then
    if(EC==1)
    then
        print "illeginst";
        print EIP;
    endif;
    if(EC==2)
    then
        breakpoint;
        print EIP;
        print "illegalmem";
    endif;
    if(EC==3)
    then
        print "arithe";
    endif;
    R1 = EXIT_PROCESS;
    call PROCESS_MANAGER;
    call CONTEXT_SWITCH;
endif;
if (EC == 0) then
    alias pid R5;
    alias dme R6;
    alias pte R7;
    breakpoint;
    
    pid = [SYSTEM_STATUS_TABLE + 1];
    dme = DISK_MAP_TABLE + pid*10;
    pte = PAGE_TABLE_BASE + pid*20;
   
    if((EPN >= 4) && (EPN <= 7)) then
        //print("In code thing");
        multipush(R5, R6, R7);
        R1 = GET_CODE_PAGE;
        R2 = [dme + EPN];
        call MEMORY_MANAGER;
        multipop(R5, R6, R7);

        [pte + EPN*2 + 0] = R0;
        [pte + EPN*2 + 1] = "1100";
    endif;

    if((EPN >= 2) && (EPN <= 3)) then
        multipush(R5, R6, R7);
        R1 = GET_FREE_PAGE;
        call MEMORY_MANAGER;
        multipop(R5, R6, R7);

        [pte + EPN*2 + 0] = R0;
        [pte + EPN*2 + 1] = "1110";

        multipush(R5, R6, R7);
        R1 = GET_FREE_PAGE;
        call MEMORY_MANAGER;
        multipop(R5, R6, R7);
        //print("3");
        [pte + EPN*2 + 2] = R0;
        [pte + EPN*2 + 3] = "1110";
    endif;
    breakpoint;
    multipop(EIP);
    restore;
    SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;  // SET MODE = 0
    //print("2");
    SP = SP+1;
    R10 = SP/512;
    R11 = SP % 512;
    //print("1");
    R10 = [PTBR + R10*2]*512;
    [R10+R11] = EIP;

    breakpoint;
    ireturn;
endif;
